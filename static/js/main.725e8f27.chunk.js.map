{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","react_default","a","createElement","className","App_NotificationElement","name","image","text","date","React","Component","NotificationElement","props","src","alt","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"yNAGMA,0LAEF,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,qBAEFH,EAAAC,EAAAC,cAACE,EAAD,CAAqBC,KAAM,gBAAiBC,MAAO,gBAAiBC,KAAM,uBAAwBC,KAAM,WACxGR,EAAAC,EAAAC,cAACE,EAAD,CAAqBC,KAAM,cAAeC,MAAO,mBAAoBC,KAAM,yDAA0DC,KAAM,mBAVjIC,IAAMC,YAgBlBC,EAAsB,SAACC,GAC3B,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKW,IAAKD,EAAMN,MAAOQ,IAAI,YACnDd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQS,EAAMP,KAA9B,KAA4CO,EAAML,MACrDP,EAAAC,EAAAC,cAAA,SAAIU,EAAMJ,SAMHT,ICnBAgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhC,EAAAC,EAAAC,cAACF,EAAAC,EAAMgC,WAAP,KACEjC,EAAAC,EAAAC,cAACgC,EAAD,QAOJnB","file":"static/js/main.725e8f27.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react'\n\nclass App extends React.Component{\n  render() {\n    return(\n      <div className='container'>\n        <div className='notification-bar'>\n          <h3>Notifications</h3>\n          <div className='noti-box'>3</div>\n          <div className='mark-box'>Mark all as read</div>\n        </div>\n        <NotificationElement name={'Gianni Pintus'} image={'images/me.jpg'} text={'Created this project'} date={'2m ago'}/>\n        <NotificationElement name={'Mark Webber'} image={'images/mark.webp'} text={'reacted to your recent post My first tournament today!'} date={'1m ago'}/>\n      </div>\n    );\n  };\n};\n\nconst NotificationElement = (props) => {\n  return(\n    <div className='infobox'>\n      <div className='picbox'><img src={props.image} alt=\"proPic\"/></div>\n      <div className='textbox'>\n        <p><span className='Name'>{props.name} </span>{props.text}</p>\n        <p>{props.date}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}